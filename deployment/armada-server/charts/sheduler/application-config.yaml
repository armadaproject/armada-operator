cyclePeriod: 10s
executorTimeout: 1h
databaseFetchSize: 1000
pulsarSendTimeout: 5s
internedStringsCacheSize: 100000
auth:
  anonymousAuth: true
metrics:
  port: 9000
  refreshInterval: 30s
pulsar:
  URL: {{ .Values.pulsar.url | default .Values.global.pulsar.url }}
  jobsetEventsTopic: "events"
  receiveTimeout: 5s
  backoffTime: 1s
postgres:
  maxOpenConns: {{ .Values.postgres.maxOpenConns | default .Values.global.postgres.maxOpenConns }}
  maxIdleConns: {{ .Values.postgres.maxIdleConns | default .Values.global.postgres.maxIdleConns }}
  connMaxLifetime: {{ .Values.postgres.connMaxLifetime | default .Values.global.postgres.connMaxLifetime }}
  connection:
    host: {{ .Values.postgres.host | default .Values.global.postgres.host}}
    port: {{ .Values.postgres.port | default .Values.global.postgres.port }}
    user: {{ .Values.postgres.user | default .Values.global.postgres.user }}
    password: {{ .Values.postgres.password | default .Values.global.postgres.password }}
    dbname: {{ .Values.postgres.dbname }}
    sslmode: {{ .Values.postgres.sslmode | default .Values.global.postgres.sslmode }}
leader:
  mode: standalone
  leaseLockName: armada-scheduler
  LeaseLockNamespace: "" # This must be set so viper allows env vars to overwrite it
  leaseDuration: 15s
  renewDeadline: 10s
  retryPeriod: 2s
  podName: "" # This must be set so viper allows env vars to overwrite it
grpc:
  port: 50052
  keepaliveParams:
    maxConnectionIdle: 5m
    time: 120s
    timeout: 20s
  keepaliveEnforcementPolicy:
    minTime: 10s
    permitWithoutStream: true
scheduling:
  executorTimeout: 10m
  nodeIdLabel: kubernetes.io/hostname
  preemption:
    enabled: true
    priorityClasses:
      armada-default:
        priority: 1000
        maximalResourceFractionPerQueue:
          memory: 0.99
          cpu: 0.99
      armada-preemptible:
        priority: 900
        maximalResourceFractionPerQueue:
          memory: 0.99
          cpu: 0.99
    defaultPriorityClass: armada-default
  queueLeaseBatchSize: 1000
  minimumResourceToSchedule:
    memory: 1000000 # 1Mb
    cpu: 0.1
  maximalResourceFractionToSchedulePerQueue:
    memory: 1.0
    cpu: 1.0
  maximalResourceFractionPerQueue:
    memory: 1.0
    cpu: 1.0
  maximalClusterFractionToSchedule:
    memory: 1.0
    cpu: 1.0
  maximumJobsToSchedule: 5000
  maxUnacknowledgedJobsPerExecutor: 2500
  maxQueueReportsToStore: 1000
  MaxJobReportsToStore: 10000
  defaultJobLimits:
    cpu: 1
    memory: 1Gi
    ephemeral-storage: 8Gi
  defaultJobTolerations:
    - key: "armadaproject.io/armada"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
  defaultJobTolerationsByPriorityClass:
    "":
      - key: "armadaproject.io/pc-armada-default"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
    armada-default:
      - key: "armadaproject.io/pc-armada-default"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
    armada-preemptible:
      - key: "armadaproject.io/pc-armada-preemptible"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
  maxRetries: 5
  resourceScarcity:
    cpu: 1.0
  indexedResources:
    - cpu
    - memory
  gangIdAnnotation: armadaproject.io/gangId
  gangCardinalityAnnotation: armadaproject.io/gangCardinality
