apiVersion: install.armadaproject.io/v1alpha1
kind: Scheduler
metadata:
  name: {{ include "armada.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{- include "armada.labels" . | nindent 4 }}
spec:
  hostNames: {{ .Values.hostNames }}
  ingress:
    ingressClass: {{ .Values.ingressClass | default .Values.global.ingressClass }}
  clusterIssuer: {{ .Values.custerIssuer | default .Values.global.clusterIssuer }}
  replicas: {{ .Values.replicas }}
  resources:
    limits:
      memory: {{ .Values.resources.limits.memory }}
      cpu: {{ .Values.resources.limits.cpu }}
    requests:
      memory: {{ .Values.resources.requests.memory }}
      cpu: {{ .Values.resources.requests.cpu }}
  environment:
    - name: LOG_FORMAT
      value: {{ .Values.environment.LOG_FORMAT }}
    - name: ARMADA_LEADER_PODNAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: ARMADA_LEADER_LEASELOCKNAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
  prometheus:
    enabled: {{ .Values.prometheus.enabled }}
    scrapeInterval: {{ .Values.prometheus.scrapeInterval }}
  image:
    repository: {{ .Values.image.repository }}
    tag: {{ .Values.image.tag | default .Values.global.image.tag}}
  pruner:
    enabled: true
    schedule: "@hourly"
    resources:
      limits:
        memory: 1Gi
        cpu: 300m
      requests:
        memory: 512Mi
        cpu: 200m
    args:
      timeout: 5m
      batchsize: {{ .Values.pruner.args.batchsize }}
      expireAfter: 2h
  applicationConfig:
{{ tpl (.Files.Get "application-config.yaml") . | indent 4 }}

