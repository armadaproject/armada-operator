# applicationConfig for armada server.
# this template can use fields from .Values
server: localhost:50051
forceNoTls: true
toleratedTaints:
  - key: armada.io/batch
    operator: in
auth:
  anonymousAuth: true
  basicAuth:
    enableAuthentication: false
  permissionGroupMapping:
    submit_jobs: ["everyone"]
    submit_any_jobs: ["everyone"]
    create_queue: ["everyone"]
    delete_queue: ["everyone"]
    cancel_jobs: ["everyone"]
    cancel_any_jobs: ["everyone"]
    reprioritize_jobs: ["everyone"]
    reprioritize_any_jobs: ["everyone"]
    watch_events: ["everyone"]
    watch_all_events: ["everyone"]
    execute_jobs: ["everyone"]      
postgres:
  connection:
    host: {{ .Values.postgres.host | default .Values.global.postgres.host}}
    port: 5432
    user: {{ .Values.postgres.user | default .Values.global.postgres.user }}
    password: {{ .Values.postgres.password | default .Values.global.postgres.password }}
    dbname: {{ .Values.postgres.dbname }}
    sslmode: {{ .Values.postgres.sslmode | default .Values.global.postgres.sslmode }}
pulsar:
  URL: {{ .Values.pulsar.url | default .Values.global.pulsar.url }}
  armadaInit:
    image:
      repository: {{ .Values.pulsar.armadaInit.image.repository }}
      tag: {{ .Values.pulsar.armadaInit.image.tag }}
    brokerHost: {{ .Values.pulsar.armadaInit.brokerHost }}
    protocol: {{ .Values.pulsar.armadaInit.protocol }}
    adminPort: {{ .Values.pulsar.armadaInit.adminPort }}
    port: {{ .Values.pulsar.armadaInit.port }}
redis:
  addrs: {{ .Values.redis.addrs | default .Values.global.redis.addrs }}
  db: {{ .Values.redis.db | default .Values.global.redis.db }}
  poolSize: {{ .Values.redis.poolSize | default .Values.global.redis.poolSize }}
scheduling:
  queueLeaseBatchSize: 1000
  maximalResourceFractionToSchedulePerQueue:
    memory: 0.99
    cpu: 0.99
  maximalResourceFractionPerQueue:
    memory: 0.99
    cpu: 0.99
  maximalClusterFractionToSchedule:
    memory: 0.99
    cpu: 0.99
  probabilityOfUsingNewScheduler: 1
  preemption:
    enabled: true
    priorityClasses:
      armada-default:
        priority: 1000
        maximalResourceFractionPerQueue:
          memory: 0.99
          cpu: 0.99
      "": # Treat missing PC the same as armada-default.
        priority: 1000
        maximalResourceFractionPerQueue:
          memory: 0.99
          cpu: 0.99
      armada-preemptible:
        priority: 900
        maximalResourceFractionPerQueue:
          memory: 0.99
          cpu: 0.99
    # Default to empty PC to not require PCs be set up in worker clusters.
    defaultPriorityClass: ""
  maxQueueReportsToStore: 1000
  MaxJobReportsToStore: 100000
  defaultJobLimits:
    cpu: 1
    memory: 1Gi
    ephemeral-storage: 8Gi
  defaultJobTolerations:
    - key: "example.com/default_toleration"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
  minTerminationGracePeriod: 1s
  maxTerminationGracePeriod: 30s
