---
# Source: armada-operator/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-armada-operator-controller-manager
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: armada-operator
    app.kubernetes.io/part-of: armada-operator
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: armada-operator/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-armada-operator-manager-role
  labels:
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - delete
  - deletecollection
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - groups
  - users
  verbs:
  - impersonate
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/proxy
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - watch
- apiGroups:
  - ""
  - apps
  - monitoring.coreos.com
  - rbac.authorization.k8s.io
  - scheduling.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - deployments
  - prometheusrules
  - serviceaccounts
  - servicemonitors
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.armadaproject.io
  resources:
  - queues
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.armadaproject.io
  resources:
  - queues/finalizers
  verbs:
  - update
- apiGroups:
  - core.armadaproject.io
  resources:
  - queues/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - install.armadaproject.io
  resources:
  - armadaservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - install.armadaproject.io
  resources:
  - armadaservers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - install.armadaproject.io
  resources:
  - binoculars
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - install.armadaproject.io
  resources:
  - binoculars/finalizers
  verbs:
  - update
- apiGroups:
  - install.armadaproject.io
  resources:
  - binoculars/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - install.armadaproject.io
  resources:
  - eventingesters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - install.armadaproject.io
  resources:
  - eventingesters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - install.armadaproject.io
  resources:
  - executors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - install.armadaproject.io
  resources:
  - executors/finalizers
  verbs:
  - update
- apiGroups:
  - install.armadaproject.io
  resources:
  - executors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - install.armadaproject.io
  resources:
  - lookoutingesters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - install.armadaproject.io
  resources:
  - lookoutingesters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - install.armadaproject.io
  resources:
  - lookouts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - install.armadaproject.io
  resources:
  - lookouts/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - users
  verbs:
  - create
  - delete
  - get
  - impersonate
  - list
  - patch
  - update
  - watch
---
# Source: armada-operator/templates/metrics-reader-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-armada-operator-metrics-reader
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: armada-operator
    app.kubernetes.io/part-of: armada-operator
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: armada-operator/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-armada-operator-proxy-role
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: armada-operator
    app.kubernetes.io/part-of: armada-operator
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: armada-operator/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-armada-operator-manager-rolebinding
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: armada-operator
    app.kubernetes.io/part-of: armada-operator
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'release-name-armada-operator-manager-role'
subjects:
- kind: ServiceAccount
  name: 'release-name-armada-operator-controller-manager'
  namespace: 'armada'
---
# Source: armada-operator/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-armada-operator-proxy-rolebinding
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: armada-operator
    app.kubernetes.io/part-of: armada-operator
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'release-name-armada-operator-proxy-role'
subjects:
- kind: ServiceAccount
  name: 'release-name-armada-operator-controller-manager'
  namespace: 'armada'
---
# Source: armada-operator/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-armada-operator-leader-election-role
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: armada-operator
    app.kubernetes.io/part-of: armada-operator
    app.kubernets.io/managed-by: kustomize
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: armada-operator/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-armada-operator-leader-election-rolebinding
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: armada-operator
    app.kubernetes.io/part-of: armada-operator
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'release-name-armada-operator-leader-election-role'
subjects:
- kind: ServiceAccount
  name: 'release-name-armada-operator-controller-manager'
  namespace: 'armada'
---
# Source: armada-operator/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-armada-operator-controller-manager-metrics-service
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: armada-operator
    app.kubernetes.io/part-of: armada-operator
    control-plane: controller-manager
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    control-plane: controller-manager
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
---
# Source: armada-operator/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-armada-operator-webhook-service
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: armada-operator
    app.kubernetes.io/part-of: armada-operator
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    control-plane: controller-manager
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
---
# Source: armada-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-armada-operator-controller-manager
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: armada-operator
    app.kubernetes.io/part-of: armada-operator
    control-plane: controller-manager
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: armada-operator
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: armada-operator
        app.kubernetes.io/instance: release-name
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: armada-operator:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: release-name-armada-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
# Source: armada-operator/templates/serving-cert.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: release-name-armada-operator-serving-cert
  labels:
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  dnsNames:
  - armada-release-name-armada-operator-webhook-service.armada.svc
  - armada-release-name-armada-operator-webhook-service.armada.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: 'release-name-armada-operator-selfsigned-issuer'
  secretName: webhook-server-cert
---
# Source: armada-operator/templates/selfsigned-issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: release-name-armada-operator-selfsigned-issuer
  labels:
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selfSigned: {}
---
# Source: armada-operator/templates/mutating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: release-name-armada-operator-mutating-webhook-configuration
  annotations:
    cert-manager.io/inject-ca-from: armada/release-name-armada-operator-serving-cert
  labels:
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'release-name-armada-operator-webhook-service'
      namespace: 'armada'
      path: /mutate-install-armadaproject-io-v1alpha1-armada-server
  failurePolicy: Fail
  name: armada-server.kb.io
  rules:
  - apiGroups:
    - install.armadaproject.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - armada-servers
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'release-name-armada-operator-webhook-service'
      namespace: 'armada'
      path: /mutate-install-armadaproject-io-v1alpha1-binoculars
  failurePolicy: Fail
  name: mbinoculars.kb.io
  rules:
  - apiGroups:
    - install.armadaproject.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - binoculars
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'release-name-armada-operator-webhook-service'
      namespace: 'armada'
      path: /mutate-install-armadaproject-io-v1alpha1-eventingester
  failurePolicy: Fail
  name: meventingester.kb.io
  rules:
  - apiGroups:
    - install.armadaproject.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - eventingesters
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'release-name-armada-operator-webhook-service'
      namespace: 'armada'
      path: /mutate-install-armadaproject-io-v1alpha1-executor
  failurePolicy: Fail
  name: mexecutor.kb.io
  rules:
  - apiGroups:
    - install.armadaproject.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - executors
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'release-name-armada-operator-webhook-service'
      namespace: 'armada'
      path: /mutate-install-armadaproject-io-v1alpha1-lookout
  failurePolicy: Fail
  name: mlookout.kb.io
  rules:
  - apiGroups:
    - install.armadaproject.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - lookout
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'release-name-armada-operator-webhook-service'
      namespace: 'armada'
      path: /mutate-install-armadaproject-io-v1alpha1-lookoutingester
  failurePolicy: Fail
  name: mlookoutingester.kb.io
  rules:
  - apiGroups:
    - install.armadaproject.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - lookoutingesters
  sideEffects: None
---
# Source: armada-operator/templates/validating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-name-armada-operator-validating-webhook-configuration
  annotations:
    cert-manager.io/inject-ca-from: armada/release-name-armada-operator-serving-cert
  labels:
    helm.sh/chart: armada-operator-0.1.0
    app.kubernetes.io/name: armada-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'release-name-armada-operator-webhook-service'
      namespace: 'armada'
      path: /validate-install-armadaproject-io-v1alpha1-armada-server
  failurePolicy: Fail
  name: varmada-server.kb.io
  rules:
  - apiGroups:
    - install.armadaproject.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - armada-servers
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'release-name-armada-operator-webhook-service'
      namespace: 'armada'
      path: /validate-install-armadaproject-io-v1alpha1-eventingester
  failurePolicy: Fail
  name: veventingester.kb.io
  rules:
  - apiGroups:
    - install.armadaproject.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - eventingesters
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'release-name-armada-operator-webhook-service'
      namespace: 'armada'
      path: /validate-install-armadaproject-io-v1alpha1-executor
  failurePolicy: Fail
  name: vexecutor.kb.io
  rules:
  - apiGroups:
    - install.armadaproject.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - executors
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'release-name-armada-operator-webhook-service'
      namespace: 'armada'
      path: /validate-install-armadaproject-io-v1alpha1-lookoutingester
  failurePolicy: Fail
  name: vlookoutingester.kb.io
  rules:
  - apiGroups:
    - install.armadaproject.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - lookoutingesters
  sideEffects: None
