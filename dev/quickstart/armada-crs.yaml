apiVersion: install.armadaproject.io/v1alpha1
kind: ArmadaServer
metadata:
  name: armada-server
  namespace: armada
spec:
  pulsarInit: false
  ingress:
    ingressClass: "nginx"
  replicas: 1
  image:
    repository: gresearch/armada-server
    tag: latest
  applicationConfig:
    httpNodePort: 30001
    grpcNodePort: 30002
    schedulerApiConnection:
      armadaUrl: "armada-scheduler.armada.svc.cluster.local:50051"
      forceNoTls: true
    corsAllowedOrigins:
      - "http://localhost:3000"
      - "http://localhost:8089"
      - "http://localhost:10000"
      - "http://localhost:30000"
    auth:
      anonymousAuth: true
      permissionGroupMapping:
        submit_any_jobs: ["everyone"]
        create_queue: ["everyone"]
        delete_queue: ["everyone"]
        cancel_any_jobs: ["everyone"]
        reprioritize_any_jobs: ["everyone"]
        watch_all_events: ["everyone"]
    eventsApiRedis:
      addrs:
        - redis-ha.data.svc.cluster.local:6379
    postgres:
      connection:
        host: postgresql.data.svc.cluster.local
        port: 5432
        user: postgres
        password: psw
        dbname: lookout
        sslmode: disable
    queryapi:
      postgres:
        connection:
          host: postgresql.data.svc.cluster.local
          port: 5432
          user: postgres
          password: psw
          dbname: lookout
          sslmode: disable
    pulsar:
      URL: pulsar://pulsar-broker.data.svc.cluster.local:6650
    redis:
      addrs:
        - redis-ha.data.svc.cluster.local:6379
---
apiVersion: install.armadaproject.io/v1alpha1
kind: Executor
metadata:
  name: armada-executor
  namespace: armada
spec:
  image:
    repository: gresearch/armada-executor
    tag: latest
  applicationConfig:
    executorApiConnection:
      armadaUrl: armada-scheduler.armada.svc.cluster.local:50051
      forceNoTls: true
---
apiVersion: install.armadaproject.io/v1alpha1
kind: Lookout
metadata:
  name: armada-lookout-v2
  namespace: armada
spec:
  replicas: 1
  ingress:
    ingressClass: "nginx"
  image:
    repository: gresearch/armada-lookout-v2
    tag: latest
  prometheus:
    enabled: true
  applicationConfig:
    httpNodePort: 30000
    # See https://github.com/armadaproject/armada/blob/master/config/lookoutv2/config.yaml
    # for the full list of configuration options.
    apiPort: 8080
    corsAllowedOrigins:
      - "http://localhost"
    uiConfig:
      armadaApiBaseUrl: "http://localhost:30001"
    postgres:
      connection:
        host: postgresql.data.svc.cluster.local
        port: 5432
        user: postgres
        password: psw
        dbname: lookout
        sslmode: disable
---
apiVersion: install.armadaproject.io/v1alpha1
kind: LookoutIngester
metadata:
  name: armada-lookout-ingester-v2
  namespace: armada
spec:
  image:
    repository: gresearch/armada-lookout-ingester-v2
    tag: latest
  applicationConfig:
    postgres:
      connection:
        host: postgresql.data.svc.cluster.local
        port: 5432
        user: postgres
        password: psw
        dbname: lookout
        sslmode: disable
    pulsar:
      URL: pulsar://pulsar-broker.data.svc.cluster.local:6650
---
apiVersion: install.armadaproject.io/v1alpha1
kind: Scheduler
metadata:
  name: armada-scheduler
  namespace: armada
spec:
  replicas: 1
  ingress:
    ingressClass: "nginx"
  image:
    repository: gresearch/armada-scheduler
    tag: latest
  applicationConfig:
    grpc:
      port: 50051
    auth:
      anonymousAuth: true
      permissionGroupMapping:
        execute_jobs: ["everyone"]
    armadaApi:
      armadaUrl: armada-server.armada.svc.cluster.local:50051
      forceNoTls: true
    pulsar:
      URL: pulsar://pulsar-broker.data.svc.cluster.local:6650
    postgres:
      connection:
        host: postgresql.data.svc.cluster.local
        port: 5432
        user: postgres
        password: psw
        dbname: scheduler
        sslmode: disable
---
apiVersion: install.armadaproject.io/v1alpha1
kind: SchedulerIngester
metadata:
  name: armada-scheduler-ingester
  namespace: armada
spec:
  replicas: 1
  image:
    repository: gresearch/armada-scheduler-ingester
    tag: latest
  applicationConfig:
    postgres:
      connection:
        host: postgresql.data.svc.cluster.local
        port: 5432
        user: postgres
        password: psw
        dbname: scheduler
        sslmode: disable
    pulsar:
      URL: pulsar://pulsar-broker.data.svc.cluster.local:6650
---
apiVersion: install.armadaproject.io/v1alpha1
kind: EventIngester
metadata:
  name: armada-event-ingester
  namespace: armada
spec:
  replicas: 1
  image:
    repository: gresearch/armada-event-ingester
    tag: latest
  applicationConfig:
    pulsar:
      URL: pulsar://pulsar-broker.data.svc.cluster.local:6650
    redis:
      addrs:
        - redis-ha.data.svc.cluster.local:6379
