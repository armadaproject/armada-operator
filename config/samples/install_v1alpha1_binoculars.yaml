apiVersion: install.armadaproject.io/v1alpha1
kind: Binoculars
metadata:
  labels:
    app.kubernetes.io/name: binoculars
    app.kubernetes.io/instance: binoculars-sample
    app.kubernetes.io/part-of: armada-operator
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: armada-operator
  name: binoculars-sample
  namespace: default
spec:
  ingressClass: "nginx"
  clusterIssuer: "k8s-cluster-issuer"
  hostnames: [localhost]
  replicas: 2

  image:
    tag: 8f1aa7314e32a071975502fc8127848369fe006a
    repository: gresearchdev/armada-binoculars
  resources:
    limits:
      memory: 1Gi
      cpu: 0.5
    requests:
      memory: 500Mi
      cpu: 0.3

  env:
  - name: KRB5_CONFIG
    value: /etc/krb5.conf
  - name: LOG_FORMAT
    value: json

  additionalVolumes:
    - name: keytab
      secret:
        secretName: armada-binoculars-dev-keytab
    - name: krb5-conf
      secret:
        defaultMode: 420
        secretName: krb5-conf
    - name: ca-bundle
      secret:
        defaultMode: 420
        secretName: ca-bundle

  additionalVolumeMounts:
    - name: keytab
      mountPath: /etc/keytab
      readOnly: true
    - name: krb5-conf
      mountPath: /etc/krb5.conf
      subPath: krb5.conf
      readOnly: true
    - name: ca-bundle
      mountPath: /etc/ssl/certs
      readOnly: true
  serviceAccount:
    imagePullSecrets:
      - name: prodregistry

  prometheus:
    enabled: true
    labels:
      metrics: "true"
      prometheus: armada
      role: prometheus-rulefiles

  labels:
    armadaproject.io/app-id: "9670"

  applicationConfig:
    impersonateUsers: true
    corsAllowedOrigins:
    - "https://localhost"
  auth:
    anonymousAuth: true
