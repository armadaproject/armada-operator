name: Test

on:
  workflow_call:

permissions:
  contents: read
  checks: write

jobs:
  go-unit-tests:
    name: Golang Unit Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Setup Golang with cache
        uses: magnetikonline/action-golang-cache@v4
        with:
          go-version: "1.20"

      - name: make test
        run: make test

      - name: Go Test Coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./operator.out # optional

  go-integration-tests:
    name: Golang Integration Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Setup Golang with cache
        uses: magnetikonline/action-golang-cache@v4
        with:
          go-version: "1.20"

      - name: make test-integration
        run: make test-integration

  go-mod-up-to-date:
    name: Golang Mod Up To Date
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Golang with Cache
        uses: magnetikonline/action-golang-cache@v4
        with:
          go-version: "1.20"

      - name: Download all Go modules
        run: go mod download

      - name: Check for tidyness of go.mod and go.sum
        run: |
          go mod tidy

          changed=$(git status -s -uno | wc -l)

          echo -e "### Git status" >> $GITHUB_STEP_SUMMARY
          if [[ "$changed" -gt 0 ]]; then
            echo -e "Go modules are not synchronized. Please run 'go mod tidy' and commit the changes." >> $GITHUB_STEP_SUMMARY

            git status -s -uno >> $GITHUB_STEP_SUMMARY

            echo -e >> $GITHUB_STEP_SUMMARY
            echo -e "### Git diff" >> $GITHUB_STEP_SUMMARY

            git --no-pager diff >> $GITHUB_STEP_SUMMARY
          else
            echo -e "Go modules are synchronized." >> $GITHUB_STEP_SUMMARY
            echo -e >> $GITHUB_STEP_SUMMARY
          fi

          exit $changed
